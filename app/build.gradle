apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    defaultConfig {
        applicationId "com.theone.mvvm"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true          // 取代runProguard
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "mvvm"
    productFlavors {
        qa {
            dimension "mvvm"
            applicationIdSuffix ".qa"
            versionNameSuffix ".qa"
            resValue "string", "app_name", "MVVM-QA"
            buildConfigField 'String', 'PRODUCT_FLAVORS', '"qa"'
        }
        dev {
            dimension "mvvm"
            //使用的第三方ID和qa包名的相同
            applicationIdSuffix ".qa"
            versionNameSuffix ".dev"
            resValue "string", "app_name", "MVVM_DEV"
            buildConfigField 'String', 'PRODUCT_FLAVORS', '"dev"'
        }
        online {
            dimension "mvvm"
            resValue "string", "app_name", "MVVM"
            buildConfigField 'String', 'PRODUCT_FLAVORS', '"online"'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation project(':libraryCore')
    implementation project(':libraryframework')

    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${rootProject.ext.version["kotlin_stdlib_jdk7"]}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${rootProject.ext.version["kotlinx_coroutines"]}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${rootProject.ext.version["kotlinx_coroutines"]}"

    implementation "androidx.appcompat:appcompat:${rootProject.ext.version["appcompat"]}"
    implementation "androidx.core:core-ktx:${rootProject.ext.version["core_ktx"]}"
    implementation "androidx.constraintlayout:constraintlayout:${rootProject.ext.version["constraintlayout"]}"

    //rxjava
    implementation "io.reactivex.rxjava3:rxjava:${rootProject.ext.version["rxjava"]}"
    implementation "io.reactivex.rxjava3:rxandroid:${rootProject.ext.version["rxandroid"]}"
    implementation "io.reactivex.rxjava3:rxkotlin:${rootProject.ext.version["rxkotlin"]}"

    //network
    implementation "com.squareup.okhttp3:okhttp:${rootProject.ext.version["okhttp3"]}"
    implementation "com.squareup.okhttp3:logging-interceptor:${rootProject.ext.version["okhttp3"]}"
    implementation "com.squareup.retrofit2:retrofit:${rootProject.ext.version["retrofit2"]}"
    implementation "com.squareup.retrofit2:converter-gson:${rootProject.ext.version["retrofit2"]}"
    implementation "com.squareup.retrofit2:adapter-rxjava3:${rootProject.ext.version["retrofit2"]}"
}
