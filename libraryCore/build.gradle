apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true          // 取代runProguard
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
        /*flavorDimensions "mvvm"
    productFlavors {
        qa {
            dimension "mvvm"
        }
        online {
            dimension "mvvm"
        }
    }*/
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation "junit:junit:4.12"
    testImplementation "androidx.test:runner:1.3.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${rootProject.ext.kotlin_stdlib_jdk7}"
    implementation "androidx.appcompat:appcompat:${rootProject.ext.appcompat}"
    implementation "androidx.lifecycle:lifecycle-extensions:${rootProject.ext.lifecycle_extensions}"
    implementation "androidx.palette:palette-ktx:${rootProject.ext.palette}"
    implementation "androidx.core:core-ktx:${rootProject.ext.core_ktx}"

    implementation "io.reactivex.rxjava3:rxjava:${rootProject.ext.rxjava}"

}
